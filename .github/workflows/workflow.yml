# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Build with CMake and run testing suite

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Create Python virtual environment
      working-directory: ${{github.workspace}}
      run: |
        sudo apt install python3-venv
        python -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install numpy
        pip install torch==2.3.0+cpu -f https://download.pytorch.org/whl/torch_stable.html
        pip install scikit-learn\

    - name: Clone and Install GoogleTest
      run: |
        git clone https://github.com/google/googletest.git -b release-1.12.1
        cd googletest
        mkdir build
        cd build
        cmake -DCMAKE_CXX_FLAGS="$CMAKE_CXX_FLAGS -D_GLIBCXX_USE_CXX11_ABI=0" ..
        make
        sudo make install
        cd ../..
        rm -rf googletest

    - name: Configure CMake
      working-directory: ${{github.workspace}}
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        source venv/bin/activate
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=Release -DARG=20000 -DCMAKE_PREFIX_PATH=${VIRTUAL_ENV}/lib/python3.8/site-packages/torch/share/cmake/Torch -DCMAKE_CXX_FLAGS="$CMAKE_CXX_FLAGS -D_GLIBCXX_USE_CXX11_ABI=0"

    - name: Build
      working-directory: ${{github.workspace}}
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --parallel

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}

    - name: Build Data
      working-directory: ${{github.workspace}}/build
      run: make data

    - name: Run Results
      working-directory: ${{github.workspace}}/build
      run: make results


